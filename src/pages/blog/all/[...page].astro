---
export const prerender = false

import BlogLayout from '@/layouts/BlogLayout.astro'
import ArticlesList from '@/components/articles/ArticlesList.astro'
import BlogAboutCallout from '@/components/articles/BlogAboutCallout.astro'
import { getRecentPosts } from '@/lib/getRecentPosts';
import type { PaginateFunction } from 'astro'

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const { articles } = await getRecentPosts({ count: 1000 })
  return paginate(articles, { pageSize: Number(import.meta.env.ARTICLES_PER_PAGE) });
}

const { page } = Astro.props;

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

// Tag the page with the content type
Astro.response.headers.set("netlify-cache-tag", "blog/all");
---

<BlogLayout title="Blog - Adam Fortuna" description="Every blog post I've written across a few different sites">
  <h1 class="font-handwriting text-6xl text-blue-700 mb-2">Blog</h1>
  <BlogAboutCallout />
  <ArticlesList showSeparator={true} articles={page.data} page={page.currentPage} totalPages={page.lastPage} url="/blog/all" />
</BlogLayout>