---
// export const prerender = false

import type { PaginateFunction } from 'astro'
import BlogLayout from '@/layouts/BlogLayout.astro'
import ArticlesList from '@/components/articles/ArticlesList.astro'
import BlogAboutCallout from '@/components/articles/BlogAboutCallout.astro'
import { getRecentPosts } from '@/lib/getRecentPosts'
import type { WordpressClientIdentifier } from "@/types"


export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const ARTICLES_PER_PAGE = Number(import.meta.env.ARTICLES_PER_PAGE)
  const projects: WordpressClientIdentifier[] = ['adamfortuna', 'minafi', 'hardcover']
  const finders = projects.map((p) => getRecentPosts({ count: 1000, projects: [p] }))
  const results = await Promise.all(finders)


  return results.flatMap(({articles}) => {
    const project = articles[0].project
    return paginate(articles, {
      params: { project },
      pageSize: ARTICLES_PER_PAGE
    });
  });
}

const titleize = (category: WordpressClientIdentifier) => {
  switch (category) {
    case 'minafi':
      return 'Minafi'
    case 'hardcover':
      return 'Hardcover'
    default:
      return 'Adam Fortuna'
  }
}

const { page } = Astro.props;
const project = page.data[0].project
const projectTitle = titleize(project)

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

// Tag the page with the content type
Astro.response.headers.set("netlify-cache-tag", `blog/projects/${project}`);
---

<BlogLayout title="Blog - Adam Fortuna" description="Every blog post I've written across a few different sites">
  <p class="font-handwriting text-2xl md:text-4xl lg:text-6xl text-blue-700 mb-2 flex flex-wrap items-baseline">
    <span>
      <a href="/blog" class="underline hover:no-underline">
        Blog
      </a>
    </span>
    <span class="text-2xl mx-2">/</span>
    <span>
      <a href="/blog/projects" class="underline hover:no-underline">
        Projects
      </a>
    </span>
    </span>
    <span class="text-2xl mx-2">/</span>
    <span>{projectTitle}</span>
  </p>
  <BlogAboutCallout />
  <ArticlesList showSeparator={true} articles={page.data} page={page.currentPage} totalPages={page.lastPage} url={`/blog/projects/${project}`} />
</BlogLayout>